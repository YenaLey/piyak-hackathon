name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # 1. Java 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 2. Gradle Wrapper에 실행 권한을 부여
      - name: Grant execute permission for Gradle Wrapper
        run: chmod +x gradlew

      # 3. application.properties 생성
      - name: create resources folder if not exists
        run: mkdir -p src/main/resources

      - name: set up application.properties
        run: echo "${{ secrets.APPLICATION }}" > src/main/resources/application.properties



      # 4. Spring Boot 애플리케이션 빌드
      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: clean bootJar


      # 5. Docker 이미지 빌드
      - name: Docker image build
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/github-actions-hackathon .

      # 6. DockerHub 로그인
      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 7. Docker Hub 이미지 푸시
      - name: Docker Hub push
        run: docker push ${{ secrets.DOCKER_USERNAME }}/github-actions-hackathon
